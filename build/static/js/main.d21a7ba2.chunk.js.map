{"version":3,"sources":["Restaurants.js","Restaurant.js","About.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Restaurants","props","useState","restaurants","setRestaurants","page","setPage","history","useHistory","useEffect","requestString","borough","query","fetch","method","then","response","json","data","catch","err","console","error","Card","Body","Text","length","Table","striped","bordered","hover","map","rest","id","_id","onClick","push","name","address","building","street","cuisine","Pagination","Prev","num","Item","Next","Restaurant","restaurant","setRestaurant","loading","setLoading","hasOwnProperty","MapContainer","style","center","coord","zoom","scrollWheelZoom","TileLayer","url","Marker","position","CardDeck","grades","grade","Footer","format","Date","parse","date","About","NotFound","App","searchString","setSearchString","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","Form","onSubmit","e","preventDefault","inline","FormControl","type","placeholder","value","onChange","target","Button","variant","Container","Row","Col","exact","path","render","queryString","location","search","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d21a7ba2.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport { Card, Table, Pagination } from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function Restaurants(props) {\r\n  const [restaurants, setRestaurants] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const perPage = 10;\r\n  const previousPage = function() { if (page > 1) setPage(num => num - 1); }\r\n  const nextPage = function() { setPage(num => num + 1); }\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    // let requestString = `${document.location.protocol}//${document.location.hostname}:${document.location.port}/`\r\n    let requestString = \"https://peaceful-tundra-65893.herokuapp.com/\";\r\n    requestString += `api/restaurants?page=${page}&perPage=${perPage}`;\r\n    let borough = props.query;\r\n    if (borough != null & borough !== \"\") requestString += `&borough=${borough}`;\r\n    fetch(requestString, { method: 'GET'})\r\n    .then(response => response.json())\r\n    .then(data => { setRestaurants(data); })\r\n    .catch(err => { console.error(err); });\r\n  }, [page, props.query]);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Text>\r\n            {(restaurants == null) ? \r\n              (<>Loading Restaurants...</>) : \r\n              ((restaurants.length === 0) ? \r\n                (<>No Restaurants Found</>) : \r\n                (<><h2>Restaurant List</h2>Full list of restaurants. Optionally sorted by borough.</>))\r\n            }\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      {restaurants && restaurants.length > 0 && \r\n        <>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Address</th>\r\n                <th>Borough</th>\r\n                <th>Cuisine</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {restaurants && restaurants.map(rest => \r\n                <tr key={rest._id} id={rest._id} onClick={()=>{ history.push(`/restaurant/${rest._id}`)}}>\r\n                  <td>{rest.name}</td>\r\n                  <td>{rest.address.building} {rest.address.street}</td>\r\n                  <td>{rest.borough}</td>\r\n                  <td>{rest.cuisine}</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n          <Pagination>\r\n            <Pagination.Prev onClick={previousPage} />\r\n            <Pagination.Item>{page}</Pagination.Item>\r\n            <Pagination.Next onClick={nextPage} />\r\n          </Pagination>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n}","import {MapContainer, TileLayer, Marker} from 'react-leaflet';\r\nimport {useState, useEffect} from 'react';\r\nimport {Card, CardDeck} from \"react-bootstrap\";\r\nimport {format} from \"date-fns\";\r\n\r\nexport default function Restaurant(props) {\r\n  const [restaurant, setRestaurant] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    setLoading(true);\r\n    // let requestString = `${document.location.protocol}//${document.location.hostname}:${document.location.port}/`\r\n    let requestString = \"https://peaceful-tundra-65893.herokuapp.com/\";\r\n    requestString += `api/restaurants/${props.id}`;\r\n    fetch(requestString, { method: 'GET'})\r\n    .then(response => response.json())\r\n    .then(data => { \r\n      setLoading(false);\r\n      setRestaurant(data.hasOwnProperty(\"_id\") ? data : null);\r\n    })\r\n    .catch(err => { console.error(err); });\r\n  }, [props.id]);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Text>\r\n            {(restaurant != null) ? \r\n              (<><h2>{restaurant.name}</h2>{restaurant.address.building} {restaurant.address.street}</>) : \r\n              ((loading === true) ? (<>Loading Restaurant Data...</>) : (<>Unable to find Restaurant with id: {props.id}</>))\r\n            }\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      {restaurant && \r\n        <MapContainer style={{\"height\": \"400px\"}} center={[restaurant.address.coord[1], restaurant.address.coord[0]]} zoom={13} scrollWheelZoom={false}>\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" /> \r\n          <Marker position={[restaurant.address.coord[1], restaurant.address.coord[0]]}></Marker>\r\n        </MapContainer>\r\n      }\r\n      <br /><h2>Ratings</h2><hr></hr>\r\n      <CardDeck>\r\n        {restaurant && restaurant.grades.map(grade =>\r\n          <Card>\r\n            <Card.Body>Grade: {grade.grade}</Card.Body>\r\n            <Card.Footer>Completed: {format(Date.parse(grade.date), \"dd/MM/yyyy\")}</Card.Footer>\r\n          </Card>\r\n        )}\r\n      </CardDeck>\r\n    </>\r\n  );\r\n}","import { Card } from \"react-bootstrap\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Text>\r\n          <h2>About</h2>\r\n          <p>My name is Rony Boscan, I'm a 4th semester student of the Computer Programming (CPP) Program on Seneca College, in Toronto, Canada. I come from Venezuela, where I previously graduated as a Mechanical Engineer.</p>\r\n          <p>My passion for programming came before going to college back in my home country. I first started learning to make web pages on my own as a hobby during my last year of school, and during the break before starting college I landed a job as an IT help desk assistant. It was during this time that I got assigned the task of developing a web application to handle the internal support requests; so in a matter of months I learned on my own JavaScript, ASP.Net and SQL using MS Access, to develop the application.</p>\r\n          <p>After graduating and having worked for a few years in the field, I realized that the Mechanical Engineering career was not fulfilling my hopes and expectations, and that the working experienced I had enjoyed the most so far was the one as a programmer. That was when I decided to do what I most liked and enrolled on the program.</p>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}","import { Card } from \"react-bootstrap\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Text>\r\n          <h2>Not Found</h2>\r\n          <p>Someday, somewhere, you will find what you're looking for, but it's not here and it's not now :'(</p>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}","import Restaurants from './Restaurants';\nimport Restaurant from './Restaurant';\nimport About from './About';\nimport NotFound from './NotFound';\n\nimport { Button, Col, Container, Form, FormControl, Nav, Navbar, Row } from 'react-bootstrap';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\n\nfunction App() {\n  const [searchString, setSearchString] = useState(\"\");\n  const history = useHistory(); // – HINT: You can use the \"useHistory\" hook – see: \"'Redirecting' to a Route\" https://web422.ca/notes/react-routing\n  const handleSubmit = function(e) {\n    e.preventDefault(); // Prevents the default action for the event (parameter e)\n    history.push(`/restaurants?borough=${searchString}`); // Navigates to the route: /restaurants?borough=searchString where searchString is the value in the state (above)\n    setSearchString(\"\"); // Resets the value of searchString to \"\"\n  }\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <LinkContainer to=\"/\">\n          <Navbar.Brand>New York Restaurants</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <LinkContainer to=\"/restaurants\">\n              <Nav.Link>Full List</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/about\">\n              <Nav.Link>About</Nav.Link>\n            </LinkContainer>\n          </Nav>\n          <Form onSubmit={handleSubmit} inline>\n            <FormControl type=\"text\" placeholder=\"Borough\" className=\"mr-sm-2\" value={searchString} onChange={(e) => setSearchString(e.target.value)} />\n            <Button type=\"submit\" variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      <Container>\n        <Row>\n          <Col>\n            <Switch>\n              <Route exact path='/' render={() => ( <Restaurants /> )}/>\n              <Route exact path='/about' render={() => ( <About /> )}/>\n              <Route path='/Restaurants' render={(props) => ( <Restaurants query={queryString.parse(props.location.search).borough} /> )}/>\n              <Route path='/Restaurant/:id' render={(props) => ( <Restaurant id={props.match.params.id} /> )}/>\n              <Route render={()=>(<NotFound />)} />\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n      <br />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/********************************************************************************* \n* WEB422 – Assignment 3 \n* I declare that this assignment is my own work in accordance with Seneca Academic Policy. \n* No part of this assignment has been copied manually or electronically from any other source \n* (including web sites) or distributed to other students. \n* \n* Name: _Rony Alberto Boscan___ Student ID: _136-346-194______ Date: _19-02-2021_________ \n* \n********************************************************************************/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}